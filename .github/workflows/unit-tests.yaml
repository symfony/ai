name: Unit Tests

on:
    push:
        paths-ignore:
            - 'src/*/doc/**'
            - 'src/**/*.md'
    pull_request:
        paths-ignore:
            - 'src/*/doc/**'
            - 'src/**/*.md'

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

env:
    REQUIRED_PHP_EXTENSIONS: 'mongodb'

jobs:
    php:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php-version: ['8.2', '8.3', '8.4']
                dependency-version: ['']
                symfony-version: ['']
                include:
                    # lowest deps
                    -   php-version: '8.2'
                        dependency-version: 'lowest'
                    # Symfony 7.4 LTS
                    -   php-version: '8.2'
                        symfony-version: '7.4.*'
                    # Symfony 8.0
                    -   php-version: '8.4'
                        symfony-version: '8.0.*'

        env:
            SYMFONY_REQUIRE: ${{ matrix.symfony-version || '>=7.3' }}

        steps:
            - uses: actions/checkout@v5

            - name: Configure environment
              run: |
                  echo COLUMNS=120 >> $GITHUB_ENV
                  echo COMPOSER_UP='composer update ${{ matrix.dependency-version == 'lowest' && '--prefer-lowest --prefer-stable' || '' }} --no-progress --no-interaction --ansi --ignore-platform-req=ext-mongodb' >> $GITHUB_ENV
                  echo PHPUNIT='vendor/bin/phpunit' >> $GITHUB_ENV
                  [ 'lowest' = '${{ matrix.dependency-version }}' ] && export SYMFONY_DEPRECATIONS_HELPER=weak

                  PACKAGES=$(find src/ -mindepth 2 -type f -name composer.json -not -path "*/vendor/*" -printf '%h\n' | sed 's/^src\///' | grep -Ev "examples" | sort |  tr '\n' ' ')
                  echo "Packages: $PACKAGES"
                  echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  tools: flex
                  extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"

            - name: Get composer cache directory
              id: composer-cache
              run: |
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache packages dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-packages-${{ matrix.php-version }}-${{ matrix.dependency-version }}-${{ matrix.symfony-version }}-${{ hashFiles('src/**/composer.json') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-packages-${{ matrix.php-version }}-${{ matrix.dependency-version }}-${{ matrix.symfony-version }}

            - name: Install root dependencies
              uses: ramsey/composer-install@v3

            - name: Build root packages
              run: php .github/build-packages.php

            - name: Run packages tests
              run: |
                  source .github/workflows/.utils.sh

                  echo "$PACKAGES" | xargs -n1 | parallel -j +3 "_run_task {} '(cd src/{} && $COMPOSER_UP && $PHPUNIT)'"

            - name: Run platform provider-factory tests (special bootstrap)
              if: contains(env.PACKAGES, 'platform')
              run: |
                  set -e
                  (cd src/platform && $COMPOSER_UP && $PHPUNIT -c phpunit.provider-factory.xml)
