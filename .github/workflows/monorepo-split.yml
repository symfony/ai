name: Monorepo Split (Symfony AI)

on:
  push:
    branches: [ main ]
    tags:
      - "*"
  workflow_dispatch:

jobs:
  split-branches:
    name: Split on branch pushes
    if: ${{ github.event_name != 'push' || startsWith(github.ref, 'refs/heads/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install splitsh-lite (linux amd64) safely
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl
          url=$(curl -sL https://api.github.com/repos/splitsh/lite/releases/latest \
            | jq -r '.assets[] | select(.name | test("linux.*(amd64|x86_64)"; "i")) | .browser_download_url' \
            | head -n1)
          echo "Downloading: $url"
          curl -L "$url" -o /usr/local/bin/splitsh-lite
          chmod +x /usr/local/bin/splitsh-lite
          /usr/local/bin/splitsh-lite --version || true
        # Uses official splitsh/lite releases. :contentReference[oaicite:0]{index=0}

      - name: Set up SSH for pushing
        env:
          SSH_KEY: ${{ secrets.SPLIT_PUSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          printf "%s" "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Define packages
        id: pkgs
        run: |
          cat > packages.json <<'JSON'
          [
            { "prefix": "src/platform",   "repo": "git@github.com:taffy41/ai-platform.git",  "branch": "main" },
            { "prefix": "src/agent",      "repo": "git@github.com:taffy41/ai-agent.git",     "branch": "main" },
            { "prefix": "src/store",      "repo": "git@github.com:taffy41/ai-store.git",     "branch": "main" },
            { "prefix": "src/mcp-sdk",    "repo": "git@github.com:taffy41/mcp-sdk.git",      "branch": "main" },
            { "prefix": "src/ai-bundle",  "repo": "git@github.com:taffy41/ai-bundle.git",    "branch": "main" },
            { "prefix": "src/mcp-bundle", "repo": "git@github.com:taffy41/mcp-bundle.git",   "branch": "main" }
          ]
          JSON

      - name: Split & push each package
        run: |
          set -euo pipefail
          git fetch --all --tags
          jq -c '.[]' packages.json | while read -r row; do
            prefix=$(echo "$row" | jq -r '.prefix')
            repo=$(echo "$row"   | jq -r '.repo')
            branch=$(echo "$row" | jq -r '.branch')

            echo "::group::Splitting $prefix -> $repo ($branch)"
            commit=$(splitsh-lite --prefix="$prefix")
            if [ -z "$commit" ]; then
              echo "No commit produced for $prefix; skipping."
              echo "::endgroup::"
              continue
            fi
            split_branch="${prefix//\//-}-split"
            git update-ref "refs/heads/$split_branch" "$commit"
            git push "$repo" "refs/heads/$split_branch:$branch" --force
            echo "::endgroup::"
          done

  split-tags:
    name: Split on tag pushes
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install splitsh-lite (linux amd64) safely
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl
          url=$(curl -sL https://api.github.com/repos/splitsh/lite/releases/latest \
            | jq -r '.assets[] | select(.name | test("linux.*(amd64|x86_64)"; "i")) | .browser_download_url' \
            | head -n1)
          echo "Downloading: $url"
          curl -L "$url" -o /usr/local/bin/splitsh-lite
          chmod +x /usr/local/bin/splitsh-lite
          /usr/local/bin/splitsh-lite --version || true

      - name: Set up SSH for pushing
        env:
          SSH_KEY: ${{ secrets.SPLIT_PUSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          printf "%s" "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Define packages
        run: |
          cat > packages.json <<'JSON'
          [
            { "prefix": "src/platform",   "repo": "git@github.com:taffy41/ai-platform.git"  },
            { "prefix": "src/agent",      "repo": "git@github.com:taffy41/ai-agent.git"     },
            { "prefix": "src/store",      "repo": "git@github.com:taffy41/ai-store.git"     },
            { "prefix": "src/mcp-sdk",    "repo": "git@github.com:taffy41/mcp-sdk.git"      },
            { "prefix": "src/ai-bundle",  "repo": "git@github.com:taffy41/ai-bundle.git"    },
            { "prefix": "src/mcp-bundle", "repo": "git@github.com:taffy41/mcp-bundle.git"   }
          ]
          JSON

      - name: Split & push tag to each package repo
        env:
          TAG: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          git fetch --all --tags
          jq -c '.[]' packages.json | while read -r row; do
            prefix=$(echo "$row" | jq -r '.prefix')
            repo=$(echo "$row"   | jq -r '.repo')

            echo "::group::Tag split $TAG for $prefix -> $repo"
            commit=$(splitsh-lite --prefix="$prefix" --origin="refs/tags/$TAG" || true)
            if [ -z "$commit" ]; then
              echo "No changes for $prefix at tag $TAG; skipping."
              echo "::endgroup::"
              continue
            fi
            git tag -f "$TAG" "$commit"
            git push "$repo" "refs/tags/$TAG" --force
            echo "::endgroup::"
          done
